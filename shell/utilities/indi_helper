#!/bin/bash


INDI_parse_cli() {
  DEV="$DEFAULT_DEVICE"
  while [[ -n "$1" ]]; do
    case "$1" in
      -d|--device)
        DEV="$2"; shift
        ;;
    esac
    shift
  done
}

INDI_log() {
  echo "$( date +%FT%T ) - $@" >&2
}

INDI_set_property_sync() {
  local DEV="$1"
  local PROPERTY="$2"
  local KEY="$3"
  local VALUE="$4"
  local TIMEOUT="${5:-2}" 
  if [[ -z "$TIMEOUT" ]]; then
    echo "Usage: set_property_sync DEVICE PROPERTY KEY VALUE TIMEOUT"
    exit 1
  fi
  indi_setprop "$DEV.$PROPERTY.$KEY"="$VALUE"
  indi_eval -w -t $TIMEOUT "\"$DEV.$PROPERTY._STATE\"==1"
}

INDI_set_local_upload_dir() {
  INDI_parse_cli "$@"  
  local DIR="$1"
  INDI_set_property_sync "$DEV" UPLOAD_MODE UPLOAD_LOCAL On 
  INDI_set_property_sync "$DEV" UPLOAD_SETTINGS UPLOAD_DIR "$DIR"
}

INDI_set_file_prefix() {
  INDI_parse_cli "$@"  
  local PREFIX="$1"
  INDI_set_property_sync "$DEV" UPLOAD_SETTINGS UPLOAD_PREFIX "$PREFIX"
}

INDI_compose_file_prefix() {
  local name="$1"
  local image_type="$2"
  local exposure="$3"
  printf -v file_prefix "%s_%s_%07.3fsecs_XXX" "$name" "$image_type" "$exposure"
  INDI_set_file_prefix "$file_prefix"
}

INDI_expose() {
  INDI_parse_cli "$@"  
  local EXPTIME="$1"
  INDI_set_property_sync "$DEV" CCD_EXPOSURE CCD_EXPOSURE_VALUE "$EXPTIME" "$( perl -e "print $EXPTIME + 10")"
}

INDI_expose_sequence() {
  local shots="$1"
  local exposure="$2"
  for i in $( seq 1 $shots ); do
    INDI_log "sequence: exposure $i of $shots ($exposure seconds)"
    INDI_expose "$exposure"
  done
}

INDI_session_template() {
  first_device="$( indi_getprop | grep CCD_EXPOSURE | cut -d. -f1 | head -n 1 )"
  device="${first_device:-set default device name here}"
  session_name="$1"
  if [[ -z "$session_name" ]]; then
    echo "Usage: INDI_session_template session_name"
    exit 1
  fi  
  mkdir -p "$session_name"
  cp "$0" "$session_name/"
  cat > "$session_name/start_sequence" <<EOF
#!/bin/bash
export DEFAULT_DEVICE="$device"
export SESSION_NAME="$session_name"
export sequence_size=10

# Read a local copy of the indi_helper script
. indi_helper

confirmation() {
  echo "Enter 'y' to continue."
  local conf_var=""
  while [[ "\$conf_var" != y ]]; do
    read -n 1 -s conf_var
  done
}

dark_exposures=""
sequence_with_name() {
  local image_type="\$1"
  local shots="\$2"
  local exposure="\$3"
  INDI_log "Starting sequence '\$image_type', \$shots shots, \$exposure seconds"
  INDI_compose_file_prefix "\$SESSION_NAME" "\$image_type" "\$exposure"
  INDI_expose_sequence "\$shots" "\$exposure"
  dark_exposures="\$dark_exposures \$exposure"
}

INDI_set_local_upload_dir "\$PWD"

# Just an example. Adjust according to your needs
for exp in 10 20 40; do
  sequence_with_name L \$sequence_size \$exp
done

# This will stop until you press 'y' on your keyboard. You can replace this with a command to rotate the filter wheel, instead
confirmation

for filter in R G B; do
  for exp in 40 80 160; do
    sequence_with_name \$filter \$sequence_size \$exp
  done
  confirmation
done

# Dark auto detection. For each different exposure, a dark file will be shot with this line
echo "\$dark_exposures" | tr ' ' '\n' | grep -Eve '$^' | sort -nu | while read exp; do
  sequence_with_name Dark \$sequence_size \$exp
done

EOF
chmod a+x "$session_name/start_sequence"
}

if [[ "$( basename "$0" )" == "indi_helper" ]] && [[ "$1" == "create-script" ]]; then
    shift
    INDI_session_template "$@"
fi
